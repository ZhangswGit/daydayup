
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  debug;

#error_log  logs/error.log  info;

pid  logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    
    log_format  main  '"remote_addr":$remote_addr,'
    				  '"remote_user":$remote_user,'
    				  '"time_local":$time_local,'
    				  '"request":$request,'
                      '"status":$status,'
                      '"body_bytes_sent":$body_bytes_sent,'
                      '"http_referer":$http_referer,'
                      '"http_user_agent":$http_user_agent,'
                      '"http_x_forwarded_for":$http_x_forwarded_for';

		#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        #          '$status "$http_referer" '
        #          '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    
    upstream connc 
    {
    	server localhost:8082;
    }

    server {
        listen       8070;
        server_name  localhost;
        set $path D:/workspaces/connecttowechat/Evn/openresty-1.13.6.2-win64/lualib/testcode;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        
		location /remote
		{
			proxy_pass http://192.168.50.121:8081/chrom1;
		}

		location /chrom1/
		{
			autoindex on;
			#alias 代替路径;
			alias D:/chrom/;
		}

		location /chrom/
		{
			autoindex on;
			#root 拼接; 
			root D:/;

			log_by_lua_file $path/log.lua;
		}

        location /redistest
		{
			default_type text/html;
			#这里的lua文件的路径为绝对路径，请根据自己安装的实际路径填儿
			#记得斜杠斿这个。从window中拷贝出来的是\这样，这样是有问题的，务必注悿
			content_by_lua_file $path/testredis.lua;
		}

        location /luatest
		{
			default_type text/html;
			#这里的lua文件的路径为绝对路径，请根据自己安装的实际路径填儿
			#记得斜杠斿这个。从window中拷贝出来的是\这样，这样是有问题的，务必注悿
			content_by_lua_file $path/testlua.lua;
		}

		location /requesttest
		{
			default_type "text/html";
			content_by_lua_file l$path/test_request_lua.lua;
		}

		#location /agbasdfds {
		#	proxy_pass http://localhost:8081/nginx;
		#}

        location / {
			set $proxy_url $scheme://$http_host;
			set $real_host $http_host;
			set $real_referer $scheme://$http_host$request_uri;
			set $tsg_token nil;

			#rewrite_by_lua_file lualib/testcode/rewrite.lua;
            proxy_set_header Host 'www.baidu.com';
            proxy_set_header test $http_host;

			proxy_pass http://connc;

			#header_filter_by_lua_file lualib/testcode/header_filter.lua;
			log_by_lua_file $path/log.lua;
		}

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
